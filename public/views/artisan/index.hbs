<!DOCTYPE html>
<html lang="ar" dir="rtl">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>ููุญุฉ ุงูุชุญูู - TN M3allim</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css" rel="stylesheet">
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700&display=swap');
        body {
            font-family: 'Tajawal', sans-serif;
        }
        .dashboard-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease;
        }
        .dashboard-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 10px 15px -3px rgba(0, 0, 0, 0.1), 0 4px 6px -2px rgba(0, 0, 0, 0.05);
        }
        .nav-link {
            position: relative;
            transition: all 0.3s ease;
        }
        .nav-link.active {
            background-color: #f8fafc;
            color: #f59e0b;
            font-weight: 600;
        }
        .nav-link.active::before {
            content: '';
            position: absolute;
            right: 0;
            top: 0;
            height: 100%;
            width: 4px;
            background-color: #f59e0b;
            border-radius: 0 4px 4px 0;
        }
    </style>
</head>

<body class="bg-gray-50 font-sans">
    <div class="flex min-h-screen">

        {{> artisanSidebar active="dashboard"}}

        <!-- Main Content -->
        <main class="flex-1 p-8">
            <!-- Welcome Section -->
            <div class="mb-8 flex justify-between items-center">
                <div>
                    <h1 class="text-3xl font-bold text-slate-800 mb-2">ูุฑุญุจุงู ุจูุ {{user.name}} ๐</h1>
                    <p class="text-slate-600">ูุชููู ูู ูููุงู ูุซูุฑุงู</p>
                </div>
                <div class="flex space-x-4 space-x-reverse">
                    <div class="relative">
                        <button onclick="toggleNotifications(event)" class="px-4 py-2 bg-white border border-gray-200 rounded-lg shadow-sm hover:bg-gray-50 flex items-center">
                            <i class="fas fa-bell text-yellow-500 ml-2"></i>
                            <span class="text-sm">ุงูุฅุดุนุงุฑุงุช</span>
                            <span id="notificationCount" class="hidden absolute -top-2 -right-2 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center">0</span>
                        </button>
                        <div id="notificationsDropdown" class="hidden absolute z-50 mt-2 w-96 bg-white rounded-lg shadow-lg right-0 max-h-96 overflow-y-auto border border-gray-200">
                            <div class="p-4">
                                <h3 class="text-slate-800 font-semibold mb-3">ุงูุฅุดุนุงุฑุงุช ุงูุฌุฏูุฏุฉ</h3>
                                <div id="notificationsList" class="space-y-3">
                                    <!-- Notifications will be inserted here -->
                                </div>
                            </div>
                        </div>
                    </div>
                    <button onclick="openServiceModal()" class="px-4 py-2 bg-yellow-500 text-white rounded-lg shadow-sm hover:bg-yellow-600 flex items-center">
                        <i class="fas fa-plus ml-2"></i>
                        <span class="text-sm">ุฅุถุงูุฉ ุฎุฏูุฉ</span>
                    </button>
                </div>
            </div>

            <!-- Stats Grid -->
            <div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-8">
                <div class="dashboard-card bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                    <div class="flex items-center">
                        <div class="p-3 bg-blue-100 rounded-full">
                            <i class="fas fa-tools text-blue-600"></i>
                        </div>
                        <div class="mr-4">
                            <h3 class="text-lg font-semibold text-slate-800">ุงูุฎุฏูุงุช ุงูููุฏูุฉ</h3>
                            <p class="text-3xl font-bold text-blue-600" id="services_Count">-</p>
                        </div>
                    </div>
                </div>

                <div class="dashboard-card bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                    <div class="flex items-center">
                        <div class="p-3 bg-green-100 rounded-full">
                            <i class="fas fa-star text-green-600"></i>
                        </div>
                        <div class="mr-4">
                            <h3 class="text-lg font-semibold text-slate-800">ุงูุชููููุงุช</h3>
                            <p class="text-3xl font-bold text-green-600" id="reviewsCount">-</p>
                        </div>
                    </div>
                </div>

                <div class="dashboard-card bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                    <div class="flex items-center">
                        <div class="p-3 bg-red-100 rounded-full">
                            <i class="fas fa-users text-red-600"></i>
                        </div>
                        <div class="mr-4">
                            <h3 class="text-lg font-semibold text-slate-800">ุงูุนููุงุก ุงููููุฒูู</h3>
                            <p class="text-3xl font-bold text-red-600" id="clientsCount">-</p>
                        </div>
                    </div>
                </div>

                <div class="dashboard-card bg-white p-6 rounded-lg shadow-sm border border-gray-100">
                    <div class="flex items-center">
                        <div class="p-3 bg-yellow-100 rounded-full">
                            <i class="fas fa-calendar-check text-yellow-600"></i>
                        </div>
                        <div class="mr-4">
                            <h3 class="text-lg font-semibold text-slate-800">ุงูููุงุนูุฏ</h3>
                            <div class="flex items-center gap-2">
                                <p class="text-3xl font-bold text-yellow-600" id="appointmentsCount">-</p>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

           

            <!-- Recent Activities -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-100 p-6 mb-8">
                <div class="flex items-center justify-between mb-6">
                    <h3 class="text-lg font-semibold text-slate-800">ุขุฎุฑ ุงููุดุงุทุงุช</h3>
                    <div class="flex gap-2">
                        <button onclick="loadActivities()" class="p-2 hover:bg-gray-100 rounded-full transition-colors">
                            <i class="fas fa-sync-alt text-gray-600"></i>
                        </button>
                    </div>
                </div>
                <div class="space-y-4" id="activitiesList">
                </div>
            </div>

            <!-- About Section -->
            <div class="bg-white rounded-lg shadow-sm border border-gray-100 p-8">
                <h2 class="text-2xl font-bold text-slate-800 mb-6">ุนู TN M3allim</h2>
                <p class="text-slate-600 leading-relaxed">
                    ููุตุฉ TN M3allim ูู ููุตุฉ ุชููุณูุฉ ุชูุฏู ุฅูู ุฑุจุท ุงูุญุฑูููู ุจุงูุฒุจุงุฆู ุจุทุฑููุฉ ุณููุฉ ููุนุงูุฉ. ูุญู ูููุฑ ููุตุฉ ุงุญุชุฑุงููุฉ ุชููู ุงูุญุฑูููู ูู ุนุฑุถ
                    ููุงุฑุงุชูู. ูุญู ูุคูู ู ูุซู ูู ููุงุฑุฉ ุญุฑููููุง ูู ุงููุทู ุงูุนุฑุจู ูุชุฃุซูุฑูุง ูู ุฎูู ุนูู ุฐู ุฌูุฏุฉ ุนุงููุฉ ูุดูุฏ ุจูุง
                    ุงูุฒุจูู ููุณู.
                </p>
                <div class="mt-6 flex flex-wrap gap-4">
                    <a href="/profile" class="px-6 py-3 bg-slate-800 text-white rounded-lg hover:bg-slate-700 transition-colors flex items-center">
                        <i class="fas fa-user-edit ml-2"></i>
                        ุชุญุฏูุซ ุงูููู ุงูุดุฎุตู
                    </a>
                    <button onclick="openServiceModal()" class="px-6 py-3 bg-yellow-500 text-white rounded-lg hover:bg-yellow-600 transition-colors flex items-center">
                        <i class="fas fa-plus-circle ml-2"></i>
                        ุฅุถุงูุฉ ุฎุฏูุฉ ุฌุฏูุฏุฉ
                    </button>
                    <button class="px-6 py-3 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors flex items-center">
                        <i class="fas fa-question-circle ml-2"></i>
                        ูุฑูุฒ ุงููุณุงุนุฏุฉ
                    </button>
                </div>
            </div>
        </main>
    </div>

    <!-- Service Modal -->
    <div id="serviceModal" class="fixed inset-0 bg-black bg-opacity-50 z-50 hidden flex items-center justify-center">
        <div class="bg-white rounded-lg p-6 w-full max-w-md mx-4">
            <div class="flex justify-between items-center mb-6">
                <h3 class="text-xl font-semibold text-slate-800">ุฅุถุงูุฉ ุฎุฏูุฉ ุฌุฏูุฏุฉ</h3>
                <button onclick="closeServiceModal()" class="text-gray-500 hover:text-gray-700">
                    <i class="fas fa-times"></i>
                </button>
            </div>
            <form id="serviceForm" onsubmit="submitService(event)" class="space-y-4">
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">ููุน ุงูุฎุฏูุฉ</label>
                    <select id="serviceType" name="serviceType" required class="w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500">
                        <option value="">ุงุฎุชุฑ ููุน ุงูุฎุฏูุฉ</option>
                        <option value="ุณุจุงูุฉ">ุณุจุงูุฉ</option>
                        <option value="ููุฑุจุงุก">ููุฑุจุงุก</option>
                        <option value="ูุฌุงุฑุฉ">ูุฌุงุฑุฉ</option>
                        <option value="ุฏูุงู">ุฏูุงู</option>
                        <option value="ุชูุธูู">ุชูุธูู</option>
                        <option value="ุจุณุชูุฉ">ุจุณุชูุฉ</option>
                        <option value="ุชุตููุญ ููููุงุช">ุชุตููุญ ููููุงุช</option>
                        <option value="ุชุตููุญ ุฃุฌูุฒุฉ ููุฒููุฉ">ุชุตููุญ ุฃุฌูุฒุฉ ููุฒููุฉ</option>
                    </select>
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">ุงูุชุฎุตุต ุงูุฏููู</label>
                    <input type="text" id="specialty" name="specialty" required
                           class="w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500"
                           placeholder="ูุซุงู: ุชุฑููุจ ุญูููุงุชุ ุฅุตูุงุญ ุชุณุฑูุจุงุช">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">ุงูุณุนุฑ ุจุงูุณุงุนุฉ (ุฏ.ุช)</label>
                    <input type="number" id="hourlyRate" name="hourlyRate" required min="0" step="0.1"
                           class="w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500"
                           placeholder="ุฃุฏุฎู ุงูุณุนุฑ ุจุงูุณุงุนุฉ">
                </div>
                <div>
                    <label class="block text-sm font-medium text-gray-700 mb-1">ุงููุตู</label>
                    <textarea id="description" name="description" required rows="3"
                            class="w-full p-2 border border-gray-300 rounded focus:ring-2 focus:ring-yellow-500 focus:border-yellow-500"
                            placeholder="ุงูุชุจ ูุตูุงู ูุฎุชุตุฑุงู ูุฎุฏูุงุชู ูุฎุจุฑุงุชู"></textarea>
                </div>
                <div class="flex justify-end space-x-4 space-x-reverse">
                    <button type="button" onclick="closeServiceModal()"
                            class="px-4 py-2 text-gray-700 bg-gray-100 rounded hover:bg-gray-200">ุฅูุบุงุก</button>
                    <button type="submit"
                            class="px-4 py-2 text-white bg-yellow-500 rounded hover:bg-yellow-600">ุฅุถุงูุฉ ุงูุฎุฏูุฉ</button>
                </div>
            </form>
        </div>
    </div>

    <!-- Notification Panel -->
    <div id="notificationPanel" class="fixed top-4 left-1/2 transform -translate-x-1/2 z-50 transition-all duration-300 opacity-0 pointer-events-none">
    </div>

    <script>
        // Format date function
        function formatDate(dateString) {
            try {
                const date = new Date(dateString);
                if (isNaN(date.getTime())) {
                    throw new Error('Invalid date');
                }
                return new Intl.DateTimeFormat('ar-TN', { 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                }).format(date);
            } catch (error) {
                console.error('Error formatting date:', error);
                return 'ุชุงุฑูุฎ ุบูุฑ ุตุงูุญ';
            }
        }

        // Format booking time
        function formatBookingDateTime(date, time) {
            try {
                const dateTime = new Date(`${date}T${time}`);
                if (isNaN(dateTime.getTime())) {
                    throw new Error('Invalid date');
                }
                return new Intl.DateTimeFormat('ar-TN', { 
                    year: 'numeric', 
                    month: 'long', 
                    day: 'numeric',
                    hour: '2-digit',
                    minute: '2-digit'
                }).format(dateTime);
            } catch (error) {
                console.error('Error formatting booking date/time:', error);
                return 'ุชุงุฑูุฎ ุบูุฑ ุตุงูุญ';
            }
        }

        // Get status color
        function getStatusColor(status) {
            switch(status) {
                case 'confirmed':
                    return 'bg-green-50 border-green-500';
                case 'cancelled':
                    return 'bg-red-50 border-red-500';
                default:
                    return 'bg-yellow-50 border-yellow-500';
            }
        }

        // Get status text in Arabic
        function getStatusText(status) {
            switch(status) {
                case 'confirmed':
                    return 'ูุคูุฏ';
                case 'cancelled':
                    return 'ููุบู';
                default:
                    return 'ูู ุงูุงูุชุธุงุฑ';
            }
        }

        // Show notification
        function showNotification(message, type = 'success') {
            const panel = document.getElementById('notificationPanel');
            const colors = {
                success: 'bg-green-500',
                error: 'bg-red-500',
                info: 'bg-blue-500'
            };

            panel.innerHTML = `
                <div class="flex items-center gap-3 px-4 py-3 rounded-lg shadow-lg ${colors[type]} text-white">
                    <i class="fas ${type === 'success' ? 'fa-check-circle' : type === 'error' ? 'fa-exclamation-circle' : 'fa-info-circle'}"></i>
                    <p>${message}</p>
                </div>
            `;

            // Show notification
            panel.classList.remove('opacity-0', 'pointer-events-none');
            
            // Hide after 3 seconds
            setTimeout(() => {
                panel.classList.add('opacity-0', 'pointer-events-none');
            }, 3000);
        }

        // Update booking status
        async function updateBookingStatus(bookingId, newStatus) {
            try {
                const response = await fetch(`/artisan/bookings/${bookingId}/status`, {
                    method: 'PUT',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ status: newStatus })
                });

                if (!response.ok) {
                    throw new Error('Failed to update booking status');
                }

                // Show success notification
                const message = newStatus === 'confirmed' 
                    ? 'ุชู ุชุฃููุฏ ุงูุญุฌุฒ ุจูุฌุงุญ'
                    : newStatus === 'cancelled'
                        ? 'ุชู ุฅูุบุงุก ุงูุญุฌุฒ ุจูุฌุงุญ'
                        : 'ุชู ุชุญุฏูุซ ุญุงูุฉ ุงูุญุฌุฒ ุจูุฌุงุญ';
                
                showNotification(message, 'success');

                // Reload activities to show updated status
                loadActivities();
            } catch (error) {
                console.error('Error updating booking status:', error);
                showNotification('ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญุฏูุซ ุญุงูุฉ ุงูุญุฌุฒ', 'error');
            }
        }

        // Fetch and display recent activities
        async function loadActivities() {
            const activitiesList = document.getElementById('activitiesList');
            
            try {
                // Show loading state
                activitiesList.innerHTML = `
                    <div class="flex flex-col items-center justify-center py-8 text-gray-500">
                        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-500 mb-4"></div>
                        <p>ุฌุงุฑู ุชุญููู ุงููุดุงุทุงุช...</p>
                    </div>
                `;
                
                const response = await fetch('/artisan/recent-activities');
                const activities = await response.json();
                
                if (activities.length === 0) {
                    activitiesList.innerHTML = '<p class="text-center text-gray-500 py-4">ูุง ุชูุฌุฏ ูุดุงุทุงุช ุญุฏูุซุฉ</p>';
                    return;
                }

                activitiesList.innerHTML = activities.map(activity => `
                    <div class="flex items-start p-3 border-r-4 ${getStatusColor(activity.status)} rounded-lg hover:bg-gray-50 transition-colors">
                        <div class="p-2 bg-yellow-100 rounded-full ml-4">
                            <i class="fas fa-calendar-check text-yellow-600"></i>
                        </div>
                        <div class="flex-grow">
                            <div class="flex items-center gap-2">
                                <p class="text-slate-800">ุญุฌุฒ ุฌุฏูุฏ ูู ${activity.user_name}</p>
                                <span class="text-sm px-2 py-1 rounded ${getStatusColor(activity.status)} text-slate-700">
                                    ${getStatusText(activity.status)}
                                </span>
                            </div>
                            <p class="text-sm text-gray-600 mt-1">
                                ุงูููุนุฏ: ${formatBookingDateTime(activity.booking_date, activity.booking_time)}
                            </p>
                            <div class="flex items-center justify-between mt-3">
                                <p class="text-xs text-gray-500">${formatDate(activity.created_at)}</p>
                                <div class="flex gap-2">
                                    ${activity.status === 'pending' ? `
                                        <button onclick="updateBookingStatus(${activity.id}, 'confirmed')" 
                                                class="px-3 py-1 bg-green-500 text-white text-sm rounded hover:bg-green-600 transition-colors">
                                            <i class="fas fa-check ml-1"></i>
                                            ุชุฃููุฏ
                                        </button>
                                        <button onclick="updateBookingStatus(${activity.id}, 'cancelled')"
                                                class="px-3 py-1 bg-red-500 text-white text-sm rounded hover:bg-red-600 transition-colors">
                                            <i class="fas fa-times ml-1"></i>
                                            ุฅูุบุงุก
                                        </button>
                                    ` : ''}
                                </div>
                            </div>
                        </div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error loading activities:', error);
                showNotification('ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญููู ุงููุดุงุทุงุช', 'error');
                activitiesList.innerHTML = `
                    <div class="flex flex-col items-center justify-center py-8 text-red-500">
                        <i class="fas fa-exclamation-circle text-4xl mb-4"></i>
                        <p>ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญููู ุงููุดุงุทุงุช</p>
                        <p class="text-sm mt-2">${error.message}</p>
                    </div>
                `;
            }
        }

        // Fetch and display statistics
        async function loadStats() {
            try {
                const response = await fetch('/artisan/stats');
                const data = await response.json();
                
                // Update the stats
                document.getElementById('services_Count').textContent = data.services;
                document.getElementById('reviewsCount').textContent = data.reviews;
                document.getElementById('clientsCount').textContent = data.clients;
                document.getElementById('appointmentsCount').textContent = data.appointments;
            } catch (error) {
                console.error('Error loading stats:', error);
            }
        }

        // Load data when page loads
        document.addEventListener('DOMContentLoaded', () => {
            loadStats();
            loadActivities();
        });
        
        function logout() {
            fetch('/logout', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                }
            })
            .then(response => {
                if (response.ok) {
                    window.location.href = '/login';
                }
            })
            .catch(error => {
                console.error('Logout error:', error);
            });
        }

        function openServiceModal() {
            document.getElementById('serviceModal').classList.remove('hidden');
        }

        function closeServiceModal() {
            document.getElementById('serviceModal').classList.add('hidden');
            document.getElementById('serviceForm').reset();
        }

        async function submitService(event) {
            event.preventDefault();
            const form = event.target;
            const formData = new FormData(form);

            try {
                const response = await fetch('/artisan/services', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({
                        serviceType: formData.get('serviceType'),
                        specialty: formData.get('specialty'),
                        hourlyRate: formData.get('hourlyRate'),
                        description: formData.get('description')
                    })
                });

                if (!response.ok) {
                    throw new Error('Failed to update specialty');
                }

                showNotification('ุชู ุชุญุฏูุซ ุงูุชุฎุตุต ุจูุฌุงุญ', 'success');
                closeServiceModal();
                
                // Reload stats to show updated info
                loadStats();
            } catch (error) {
                console.error('Error updating specialty:', error);
                showNotification('ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญุฏูุซ ุงูุชุฎุตุต', 'error');
            }
        }

        let isNotificationsOpen = false;

        async function loadNotifications() {
            try {
                const response = await fetch('/artisan/notifications');
                if (!response.ok) throw new Error('Failed to fetch notifications');
                
                const notifications = await response.json();
                const notificationsList = document.getElementById('notificationsList');
                const notificationCount = document.getElementById('notificationCount');
                
                // Update notification count
                if (notifications.length > 0) {
                    notificationCount.textContent = notifications.length;
                    notificationCount.classList.remove('hidden');
                } else {
                    notificationCount.classList.add('hidden');
                }
                
                // Clear existing notifications
                notificationsList.innerHTML = '';
                
                // Add new notifications
                notifications.forEach(notification => {
                    const date = new Date(notification.booking_date).toLocaleDateString('ar-TN');
                    const time = notification.booking_time.slice(0, 5);
                    
                    const notificationElement = document.createElement('div');
                    notificationElement.className = 'p-3 bg-slate-50 rounded-lg border border-slate-200 cursor-pointer hover:bg-slate-100 transition-colors';
                    notificationElement.innerHTML = `
                        <div class="text-slate-800">
                            <p class="font-semibold">ุญุฌุฒ ุฌุฏูุฏ ูู ${notification.user_name}</p>
                            <p class="text-sm text-slate-600">
                                <i class="fas fa-calendar ml-1"></i>${date}
                                <i class="fas fa-clock mr-3 ml-1"></i>${time}
                            </p>
                            ${notification.notes ? `<p class="text-sm mt-2">${notification.notes}</p>` : ''}
                        </div>
                    `;
                    
                    // Add click handler to mark as read
                    notificationElement.addEventListener('click', () => markAsRead(notification.id));
                    
                    notificationsList.appendChild(notificationElement);
                });
                
                if (notifications.length === 0) {
                    notificationsList.innerHTML = '<p class="text-slate-600 text-center">ูุง ุชูุฌุฏ ุฅุดุนุงุฑุงุช ุฌุฏูุฏุฉ</p>';
                }
            } catch (error) {
                console.error('Error loading notifications:', error);
            }
        }

        async function markAsRead(notificationId) {
            try {
                const response = await fetch(`/artisan/notifications/${notificationId}/read`, {
                    method: 'PUT'
                });
                
                if (!response.ok) throw new Error('Failed to mark notification as read');
                
                // Reload notifications
                loadNotifications();
            } catch (error) {
                console.error('Error marking notification as read:', error);
            }
        }

        function toggleNotifications(event) {
            event.preventDefault();
            const dropdown = document.getElementById('notificationsDropdown');
            isNotificationsOpen = !isNotificationsOpen;
            
            if (isNotificationsOpen) {
                dropdown.classList.remove('hidden');
                loadNotifications();
            } else {
                dropdown.classList.add('hidden');
            }
        }

        // Load notifications on page load
        document.addEventListener('DOMContentLoaded', loadNotifications);

        // Check for new notifications every minute
        setInterval(loadNotifications, 60000);

        // Close notifications when clicking outside
        document.addEventListener('click', function(event) {
            const dropdown = document.getElementById('notificationsDropdown');
            const notificationButton = event.target.closest('button');
            
            if (!dropdown) return;
            
            // If click is outside the dropdown and not on the notification button
            if (!dropdown.contains(event.target) && !notificationButton?.contains(event.target)) {
                isNotificationsOpen = false;
                dropdown.classList.add('hidden');
            }
        });

        // Load reviews
        async function loadReviews() {
            const reviewsList = document.getElementById('reviewsList');
            
            try {
                // Show loading state
                reviewsList.innerHTML = `
                    <div class="flex flex-col items-center justify-center py-8 text-gray-500">
                        <div class="animate-spin rounded-full h-8 w-8 border-b-2 border-gray-500 mb-4"></div>
                        <p>ุฌุงุฑู ุชุญููู ุงูุชููููุงุช...</p>
                    </div>
                `;
                
                const response = await fetch('/artisan/reviews');
                const reviews = await response.json();
                
                if (reviews.length === 0) {
                    reviewsList.innerHTML = '<p class="text-center text-gray-500 py-4">ูุง ุชูุฌุฏ ุชููููุงุช ุญุชู ุงูุขู</p>';
                    return;
                }

                reviewsList.innerHTML = reviews.map(review => `
                    <div class="flex items-start p-4 border border-gray-200 rounded-lg hover:bg-gray-50 transition-colors">
                        <img src="${review.user_photo}" alt="${review.user_name}" 
                             class="w-12 h-12 rounded-full object-cover ml-4">
                        <div class="flex-grow">
                            <div class="flex items-center justify-between">
                                <h3 class="font-semibold text-slate-800">${review.user_name}</h3>
                                <div class="flex items-center">
                                    <span class="text-yellow-500 ml-1">${review.rating}</span>
                                    <i class="fas fa-star text-yellow-500"></i>
                                </div>
                            </div>
                            <p class="text-gray-600 mt-2">${review.comment}</p>
                            <p class="text-sm text-gray-500 mt-2">${review.created_at}</p>
                        </div>
                    </div>
                `).join('');
            } catch (error) {
                console.error('Error loading reviews:', error);
                reviewsList.innerHTML = '<p class="text-center text-red-500 py-4">ุญุฏุซ ุฎุทุฃ ุฃุซูุงุก ุชุญููู ุงูุชููููุงุช</p>';
            }
        }

        // Load reviews on page load
        document.addEventListener('DOMContentLoaded', () => {
            loadReviews();
        });
    </script>
</body>

</html>