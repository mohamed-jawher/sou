<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>الملف الشخصي - TN M3allim</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700&display=swap');
        body {
            font-family: 'Tajawal', sans-serif;
        }
        /* Add this line for Alpine.js */
        [x-cloak] { display: none !important; }
        
        .profile-card {
            transition: transform 0.2s ease-in-out, box-shadow 0.2s ease-in-out;
        }
        .profile-card:hover {
            transform: translateY(-2px);
            box-shadow: 0 4px 6px -1px rgba(0, 0, 0, 0.1), 0 2px 4px -1px rgba(0, 0, 0, 0.06);
        }
        .input-focus {
            transition: all 0.2s ease-in-out;
        }
        .input-focus:focus {
            border-color: #3B82F6;
            box-shadow: 0 0 0 3px rgba(59, 130, 246, 0.1);
        }
        .nav-link {
            position: relative;
            transition: all 0.3s ease;
        }
        .nav-link.active {
            background-color: #f8fafc;
            color: #f59e0b;
            font-weight: 600;
        }
        .nav-link.active::before {
            content: '';
            position: absolute;
            right: 0;
            top: 0;
            height: 100%;
            width: 4px;
            background-color: #f59e0b;
            border-radius: 0 4px 4px 0;
        }
    </style>
</head>

<body class="bg-gray-50 font-sans" x-data="profileForm()">
    <div class="flex min-h-screen">
        <!-- Include the sidebar partial with active page set to 'profile' -->
        {{> artisanSidebar active="profile"}}

        <!-- Main Content -->
        <main class="flex-1 p-8">
            <div class="max-w-5xl mx-auto">
                <!-- Header -->
                <div class="mb-8">
                    <h1 class="text-3xl font-bold text-slate-800">الملف الشخصي</h1>
                    <p class="text-slate-600 mt-2">قم بتحديث معلوماتك الشخصية وإدارة حسابك</p>
                </div>

                <!-- Profile Form -->
                <form @submit.prevent="submitForm" class="space-y-8">
                    <!-- Profile Photo Section -->
                    <div class="profile-card bg-white p-6 rounded-xl shadow-sm">
                        <h2 class="text-xl font-bold text-slate-800 mb-4 flex items-center">
                            <i class="fas fa-camera text-blue-500 ml-2"></i>
                            الصورة الشخصية
                        </h2>
                        <div class="flex flex-col items-center">
                            <div class="relative group">
                                <!-- Update the img src attribute in the profile photo section -->
                                <img :src="formData.profilePhoto.preview || (userData.img ? '/uploads/profiles/' + userData.img : '/img/default-avatar.png')" 
                                     class="w-32 h-32 rounded-full border-4 border-white shadow-lg object-cover cursor-pointer"
                                     data-profile-image
                                     @click="document.getElementById('profilePhotoInput').click()">
                                
                                <div class="absolute inset-0 bg-black/30 rounded-full opacity-0 group-hover:opacity-100 flex items-center justify-center transition-opacity">
                                    <i class="fas fa-camera text-white text-2xl"></i>
                                </div>
                            </div>
                            <input type="file" id="profilePhotoInput" class="hidden" accept="image/*" @change="uploadProfilePhoto">
                            <div class="mt-4 flex gap-2">
                                <button type="button" @click="document.getElementById('profilePhotoInput').click()" 
                                        class="bg-blue-500 text-white px-4 py-2 rounded-lg hover:bg-blue-600 transition-colors flex items-center">
                                    <i class="fas fa-upload ml-2"></i>
                                    تغيير الصورة
                                </button>
                                <button type="button" @click="removeProfilePhoto" 
                                        class="bg-gray-500 text-white px-4 py-2 rounded-lg hover:bg-gray-600 transition-colors flex items-center"
                                        :disabled="!formData.profilePhoto.preview && !userData.img">
                                    <i class="fas fa-trash ml-2"></i>
                                    إزالة
                                </button>
                            </div>
                        </div>
                    </div>

                    <!-- General Information -->
                    <div class="profile-card bg-white p-6 rounded-xl shadow-sm">
                        <h2 class="text-xl font-bold text-slate-800 mb-4 flex items-center">
                            <i class="fas fa-info-circle text-blue-500 ml-2"></i>
                            معلومات عامة
                        </h2>
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">البريد الإلكتروني</label>
                                <input type="email" class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                       x-model="formData.email" disabled>
                            </div>
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">الإسم الكامل</label>
                                <input type="text" class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                       x-model="formData.fullname" required>
                            </div>
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">رقم الهاتف</label>
                                <input type="tel" class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                       x-model="formData.phone" required>
                            </div>
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">العنوان</label>
                                <input type="text" class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                       x-model="formData.address">
                            </div>
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">الموقع</label>
                                <input type="text" class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                       x-model="formData.localisation" placeholder="{{profile.localisation}}">
                            </div>
                        </div>

                        <!-- Password Change Link -->
                        <div class="mt-6 flex justify-end">
                            <a href="/profile/password" class="inline-flex items-center px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 transition-colors">
                                <i class="fas fa-key ml-2"></i>
                                تغيير كلمة المرور
                            </a>
                        </div>

                        <!-- Social Media Section -->
                        <div class="mt-6 border-t border-gray-200 pt-6 profile-card bg-white p-6 rounded-xl shadow-sm social-media-section">
                            <h3 class="text-lg font-semibold text-slate-800 mb-4 flex items-center">
                                <i class="fas fa-share-alt text-blue-500 ml-2"></i>
                                وسائل التواصل الاجتماعي
                            </h3>
                            <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                                <div class="space-y-2">
                                    <label class="block font-medium text-gray-700">فيسبوك</label>
                                    <div class="relative">
                                        <span class="absolute inset-y-0 right-0 flex items-center pr-3 text-blue-600">
                                            <i class="fab fa-facebook"></i>
                                        </span>
                                        <input type="text" 
                                               class="w-full p-3 pr-10 border rounded-lg input-focus bg-gray-50" 
                                               x-model="formData.facebook"
                                               placeholder="رابط الفيسبوك">
                                    </div>
                                </div>
                                <div class="space-y-2">
                                    <label class="block font-medium text-gray-700">إنستغرام</label>
                                    <div class="relative">
                                        <span class="absolute inset-y-0 right-0 flex items-center pr-3 text-pink-600">
                                            <i class="fab fa-instagram"></i>
                                        </span>
                                        <input type="text" 
                                               class="w-full p-3 pr-10 border rounded-lg input-focus bg-gray-50" 
                                               x-model="formData.instagram"
                                               placeholder="رابط الإنستغرام">
                                    </div>
                                </div>
                                <div class="space-y-2">
                                    <label class="block font-medium text-gray-700">لينكد إن</label>
                                    <div class="relative">
                                        <span class="absolute inset-y-0 right-0 flex items-center pr-3 text-blue-800">
                                            <i class="fab fa-linkedin"></i>
                                        </span>
                                        <input type="text" 
                                               class="w-full p-3 pr-10 border rounded-lg input-focus bg-gray-50" 
                                               x-model="formData.linkedin"
                                               placeholder="رابط لينكد إن">
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>

                    <!-- Artisan Information (only shown for artisans) -->
                    <div class="profile-card bg-white p-6 rounded-xl shadow-sm" x-show="userData.role == 'artisan'">
                        <h2 class="text-xl font-bold text-slate-800 mb-4 flex items-center">
                            <i class="fas fa-tools text-blue-500 ml-2"></i>
                    تغيير  المهنة        
                        </h2>
                        
                        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mb-6">
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">المهنة</label>
                                <select class="w-full p-3 border rounded-lg input-focus bg-gray-50" x-model="formData.profession">
                                    <option value="">اختر المهنة</option>
                                    <option value="plumber">سباك</option>
                                    <option value="electrician">كهربائي</option>
                                    <option value="carpenter">نجار</option>
                                    <option value="painter">دهان</option>
                                    <option value="builder">بناء</option>
                                    <option value="tiler">مبلط</option>
                                    <option value="gardener">بستاني</option>
                                    <option value="cleaner">عامل نظافة</option>
                                    <option value="other">أخرى</option>
                                </select>
                            </div>
                            <div class="space-y-2" x-cloak x-show="formData.profession === 'other'">
                                <label class="block font-medium text-gray-700">حدد المهنة</label>
                                <input type="text" class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                       x-model="formData.otherProfession">
                            </div>
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">سنوات الخبرة</label>
                                <input type="number" class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                       x-model="formData.experience" min="0">
                            </div>
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">سعر الخدمة (بالدينار)</label>
                                <input type="number" class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                       x-model="formData.hourlyRate" min="0">
                            </div>
                        </div>
                        
                        <div class="space-y-2">
                            <label class="block font-medium text-gray-700">وصف الخدمات</label>
                            <textarea class="w-full p-3 border rounded-lg input-focus bg-gray-50 h-32" 
                                      x-model="formData.description"></textarea>
                        </div>
                    </div>


                    <!-- Location Information -->
                    <div class="profile-card bg-white p-6 rounded-xl shadow-sm">
                        <h2 class="text-xl font-bold text-slate-800 mb-4 flex items-center">
                            <i class="fas fa-map-marker-alt text-blue-500 ml-2"></i>
                            الموقع
                        </h2>
                        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">الولاية</label>
                                <select class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                        x-model="formData.governorate">
                                    <option value="">اختر الولاية</option>
                                    <option value="tunis">تونس</option>
                                    <option value="ariana">أريانة</option>
                                    <option value="ben_arous">بن عروس</option>
                                    <option value="manouba">منوبة</option>
                                    <option value="nabeul">نابل</option>
                                    <option value="zaghouan">زغوان</option>
                                    <option value="bizerte">بنزرت</option>
                                    <option value="beja">باجة</option>
                                    <option value="jendouba">جندوبة</option>
                                    <option value="kef">الكاف</option>
                                    <option value="siliana">سليانة</option>
                                    <option value="sousse">سوسة</option>
                                    <option value="monastir">المنستير</option>
                                    <option value="mahdia">المهدية</option>
                                    <option value="sfax">صفاقس</option>
                                    <option value="kairouan">القيروان</option>
                                    <option value="kasserine">القصرين</option>
                                    <option value="sidi_bouzid">سيدي بوزيد</option>
                                    <option value="gabes">قابس</option>
                                    <option value="medenine">مدنين</option>
                                    <option value="tataouine">تطاوين</option>
                                    <option value="gafsa">قفصة</option>
                                    <option value="tozeur">توزر</option>
                                    <option value="kebili">قبلي</option>
                                </select>
                            </div>
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">المدينة</label>
                                <input type="text" class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                       x-model="formData.city">
                            </div>
                            <div class="space-y-2">
                                <label class="block font-medium text-gray-700">الرمز البريدي</label>
                                <input type="text" class="w-full p-3 border rounded-lg input-focus bg-gray-50" 
                                       x-model="formData.postalCode">
                            </div>
                        </div>
                    </div>

                   


                    <!-- Gallery Section -->
                    <div class="mt-6 border-t border-gray-200 pt-6 profile-card bg-white p-6 rounded-xl shadow-sm"
                         x-init="loadGallery()">
                        <h3 class="text-lg font-semibold text-slate-800 mb-4 flex items-center">
                            <i class="fas fa-images text-blue-500 ml-2"></i>
                            معرض الصور
                        </h3>
                        <!-- Gallery Grid -->
                        <div class="grid grid-cols-2 sm:grid-cols-3 lg:grid-cols-4 gap-4">
                            <!-- Gallery Items -->
                            <template x-for="(image, index) in gallery" :key="index">
                                <div class="relative group aspect-square bg-white rounded-xl overflow-hidden border border-gray-200">
                                    <img :src="'/uploads/gallery/' + image.filename" 
                                         class="w-full h-full object-cover"
                                         @error="$event.target.src = '/img/placeholder.jpg'"
                                         :alt="`Gallery image ${index + 1}`">
                                    <div class="absolute inset-0 bg-black/50 opacity-0 group-hover:opacity-100 transition-opacity flex items-center justify-center">
                                        <button type="button" class="p-2 bg-white rounded-full text-red-500 hover:text-red-700 hover:bg-gray-100 transition-colors"
                                                @click.prevent="removeImage(index, image.filename)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </div>
                            </template>

                            <!-- Add Image Button -->
                            <div class="aspect-square bg-white rounded-xl border-2 border-dashed border-gray-300 flex items-center justify-center cursor-pointer hover:bg-gray-50 transition-colors"
                                 @click="$refs.galleryInput.click()">
                                <div class="text-center">
                                    <i class="fas fa-plus text-gray-400 text-2xl mb-2"></i>
                                    <p class="text-sm text-gray-500">إضافة صورة</p>
                                </div>
                                <input type="file" x-ref="galleryInput" @change="uploadGalleryImages" 
                                       accept="image/jpeg,image/png,image/gif,image/webp" class="hidden" multiple>
                            </div>
                        </div>

                        <!-- Gallery Loading State -->
                        <div x-show="galleryLoading" class="flex justify-center items-center py-4">
                            <i class="fas fa-spinner fa-spin text-blue-500 text-2xl"></i>
                        </div>

                        <!-- Gallery Error Message -->
                        <div x-show="galleryError" class="mt-4 p-4 bg-red-100 text-red-700 rounded-lg">
                            <p x-text="galleryError"></p>
                        </div>
                    </div>


                    <!-- Status Messages -->
                    <div x-show="message.text" 
                         x-transition
                         :class="{'bg-green-100 text-green-700': message.type === 'success', 'bg-red-100 text-red-700': message.type === 'error'}"
                         class="mt-4 p-3 rounded-lg">
                        <p x-text="message.text"></p>
                    </div>

                    <!-- Submit Button -->
                    <div class="flex justify-end">
                        <button type="submit" 
                                class="bg-blue-500 text-white px-8 py-3 rounded-lg hover:bg-blue-600 transition-colors flex items-center"
                                :disabled="loading">
                            <i class="fas fa-spinner fa-spin ml-2" x-show="loading"></i>
                            <i class="fas fa-save ml-2" x-show="!loading"></i>
                            <span x-text="loading ? 'جاري الحفظ...' : 'حفظ التغييرات'"></span>
                        </button>
                    </div>
                </form>
            </div>
        </main>
    </div>

    <script>
        // Password Manager Component
        document.addEventListener('alpine:init', () => {
            Alpine.data('passwordManager', () => ({
                form: {
                    currentPassword: '',
                    newPassword: '',
                    confirmPassword: ''
                },
                loading: false,
                message: {
                    text: '',
                    type: ''
                },
                get canSubmit() {
                    return this.form.currentPassword && 
                           this.form.newPassword && 
                           this.form.confirmPassword && 
                           this.form.newPassword === this.form.confirmPassword &&
                           !this.loading;
                },
                async changePassword() {
                    if (!this.canSubmit) {
                        if (!this.form.currentPassword || !this.form.newPassword || !this.form.confirmPassword) {
                            this.message = {
                                text: 'يرجى ملء جميع حقول كلمة المرور',
                                type: 'error'
                            };
                        } else if (this.form.newPassword !== this.form.confirmPassword) {
                            this.message = {
                                text: 'كلمة المرور الجديدة وتأكيدها غير متطابقين',
                                type: 'error'
                            };
                        }
                        return;
                    }

                    this.loading = true;
                    try {
                        const response = await fetch('/password/change', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                currentPassword: this.form.currentPassword,
                                newPassword: this.form.newPassword
                            })
                        });

                        const result = await response.json();
                        this.message = {
                            text: result.message,
                            type: result.success ? 'success' : 'error'
                        };

                        if (result.success) {
                            // Clear form on success
                            this.form = {
                                currentPassword: '',
                                newPassword: '',
                                confirmPassword: ''
                            };
                        }
                    } catch (error) {
                        console.error('Error changing password:', error);
                        this.message = {
                            text: 'حدث خطأ في تغيير كلمة المرور',
                            type: 'error'
                        };
                    } finally {
                        this.loading = false;
                    }
                }
            }));
        });
    
        document.addEventListener('alpine:init', () => {
            Alpine.data('profileForm', () => ({
                init() {
                    this.loadGallery();
                },
                loading: false,
                error: '',
                message: '',
                formData: {
                    fullname: '{{user.name}}',
                    email: '{{user.email}}',
                    phone: '{{user.telephone}}',
                    address: '{{user.adresse}}',
                    governorate: '{{user.gouvernorat}}',
                    city: '{{user.ville}}',
                    postalCode: '{{user.code_postal}}',
                    localisation: '{{user.localisation}}',
                    facebook: '{{user.facebook}}',
                    instagram: '{{user.instagram}}',
                    linkedin: '{{user.linkedin}}',
                    profilePhoto: {
                        file: null,
                        preview: null
                    },
                    gallery: [],
                    currentPassword: '',
                    newPassword: '',
                    confirmPassword: ''
                },

                userData: {
                    img: '{{user.img}}'
                },
                gallery: [],
                galleryLoading: false,
                galleryError: null,
                
                async submitForm() {
                    this.loading = true;
                    this.error = '';
                    this.message = '';

                    try {
                        const formData = new FormData();
                        
                        // Add basic form fields
                        formData.append('fullname', this.formData.fullname); 
                        formData.append('email', this.formData.email);
                        formData.append('telephone', this.formData.phone);
                        formData.append('adresse', this.formData.address);
                        formData.append('gouvernorat', this.formData.governorate);
                        formData.append('ville', this.formData.city);
                        formData.append('code_postal', this.formData.postalCode);
                        
                        // Only append localisation if it has a value
                        if (this.formData.localisation) {
                            formData.append('localisation', this.formData.localisation);
                        }

                        // Add social media data - send current values or empty string
                        formData.append('facebook', this.formData.facebook || '');
                        formData.append('instagram', this.formData.instagram || '');
                        formData.append('linkedin', this.formData.linkedin || '');

                        // Add profile photo if changed
                        if (this.formData.profilePhoto.file) {
                            formData.append('profilePhoto', this.formData.profilePhoto.file);
                        }

                        console.log('Sending form data:', Object.fromEntries(formData));

                        const response = await fetch('/profile/update-profile', {
                            method: 'POST',
                            body: formData
                        });

                        const result = await response.json();
                        
                        console.log('Server response:', result);
                        
                        if (result.success) {
                            this.message = {
                                text: result.message,
                                type: 'success'
                            };
                            // Update local data with server response
                            if (result.userData) {
                                this.formData.fullname = result.userData.nom;
                                this.formData.email = result.userData.email;
                                this.formData.phone = result.userData.telephone;
                                this.formData.address = result.userData.adresse;
                                this.formData.governorate = result.userData.gouvernorat;
                                this.formData.city = result.userData.ville;
                                this.formData.postalCode = result.userData.code_postal;
                                this.formData.localisation = result.userData.localisation;
                                this.formData.facebook = result.userData.facebook || '';
                                this.formData.instagram = result.userData.instagram || '';
                                this.formData.linkedin = result.userData.linkedin || '';
                            }
                        } else {
                            this.message = {
                                text: result.message,
                                type: 'error'
                            };
                        }
                    } catch (error) {
                        console.error('Error updating profile:', error);
                        this.message = {
                            text: 'حدث خطأ في تحديث الملف الشخصي',
                            type: 'error'
                        };
                    }

                    this.loading = false;
                },

                async loadGallery() {
                    this.galleryLoading = true;
                    this.galleryError = null;
                    try {
                        const response = await fetch('/profile/gallery');
                        if (!response.ok) throw new Error('Failed to load gallery');
                        const data = await response.json();
                        this.gallery = data;
                    } catch (error) {
                        console.error('Error loading gallery:', error);
                        this.galleryError = 'حدث خطأ في تحميل معرض الصور';
                    } finally {
                        this.galleryLoading = false;
                    }
                },
                async uploadGalleryImages(event) {
                    const files = event.target.files;
                    if (!files.length) return;

                    this.galleryLoading = true;
                    this.galleryError = null;

                    const formData = new FormData();
                    Array.from(files).forEach(file => {
                        formData.append('gallery', file);
                    });

                    try {
                        const response = await fetch('/profile/gallery', {
                            method: 'POST',
                            body: formData
                        });

                        if (!response.ok) throw new Error('Failed to upload images');
                        const result = await response.json();

                        if (result.success) {
                            // Refresh gallery after upload
                            await this.loadGallery();
                            this.showMessage('تم رفع الصور بنجاح', 'success');
                        }
                    } catch (error) {
                        console.error('Error uploading images:', error);
                        this.galleryError = 'حدث خطأ في رفع الصور';
                    } finally {
                        this.galleryLoading = false;
                        event.target.value = ''; // Clear the input
                    }
                },
                async removeImage(index, filename) {
                    if (!confirm('هل أنت متأكد من حذف هذه الصورة؟')) return;

                    this.galleryLoading = true;
                    this.galleryError = null;

                    try {
                        const response = await fetch(`/profile/gallery/${filename}`, {
                            method: 'DELETE'
                        });

                        if (!response.ok) throw new Error('Failed to delete image');
                        const result = await response.json();

                        if (result.success) {
                            this.gallery.splice(index, 1);
                            this.showMessage('تم حذف الصورة بنجاح', 'success');
                        }
                    } catch (error) {
                        console.error('Error removing image:', error);
                        this.galleryError = 'حدث خطأ في حذف الصورة';
                    } finally {
                        this.galleryLoading = false;
                    }
                },
                showMessage(text, type = 'success') {
                    this.message = { text, type };
                    setTimeout(() => {
                        this.message = { text: '', type: '' };
                    }, 3000);
                }
            }));
        });

    </script>
    {{> chatbot}}
</body>
</html>