<div class="max-w-screen-xl mx-auto px-5">
    <header class="flex flex-col lg:flex-row justify-between items-center my-5">
        <div class="flex w-full lg:w-auto items-center justify-between">
            <a href="/" class="text-lg">
                <span class="font-extrabold text-3xl text-slate-800 tracking-wide">
                    TN <span class="text-yellow-500">M3allim</span>
                </span>

                <span class="text-slate-500"></span>
            </a>
            <div class="block lg:hidden">
                <button id="astronav-menu" aria-label="تبديل القائمة">
                    <svg fill="currentColor" class="w-4 h-4 text-gray-800" width="24" height="24" viewBox="0 0 24 24"
                        xmlns="https://www.w3.org/2000/svg">
                        <title>تبديل القائمة</title>
                        <path class="astronav-close-icon astronav-toggle hidden" fill-rule="evenodd" clip-rule="evenodd"
                            d="M18.278 16.864a1 1 0 01-1.414 1.414l-4.829-4.828-4.828 4.828a1 1 0 01-1.414-1.414l4.828-4.829-4.828-4.828a1 1 0 011.414-1.414l4.829 4.828 4.828-4.828a1 1 0 111.414 1.414l-4.828 4.829 4.828 4.829z">
                        </path>
                        <path class="astronav-open-icon astronav-toggle" fill-rule="evenodd"
                            d="M4 5h16a1 1 0 010 2H4a1 1 0 110-2zm0 6h16a1 1 0 010 2H4a1 1 0 110-2zm0 6h16a1 1 0 010 2H4a1 1 0 110-2z">
                        </path>
                    </svg>
                </button>
            </div>
        </div>
        <nav class="astronav-items astronav-toggle hidden w-full lg:w-auto mt-2 lg:flex lg:mt-0">
            <ul class="flex flex-col lg:flex-row lg:gap-6">
                <li>
                    <a href="/"
                        class="flex lg:px-3 py-2 items-center text-gray-600 hover:text-gray-900 transition-colors duration-200">
                        <span>الرئيسية</span>
                    </a>
                </li>
                <li>
                    <a href="/client"
                        class="flex lg:px-3 py-2 items-center text-gray-600 hover:text-gray-900 transition-colors duration-200">
                        <span>الحرفيون</span>
                    </a>
                </li>
                {{#if user}}
                <li class="relative astronav-dropdown">
                    <button
                        class="flex items-center lg:px-3 py-2 text-gray-600 hover:text-gray-900 transition-colors duration-200">
                        <span>حسابي</span>
                        <svg xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3"
                            stroke="currentColor" class="w-3 h-3 mr-1">
                            <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5" />
                        </svg>
                    </button>
                    <div class="dropdown-toggle hidden lg:absolute top-full left-0 w-48 bg-white rounded-md shadow-lg py-2 z-50">
                        <a href="/user-dashboard/profile"
                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors duration-200">
                            <i class="fas fa-user-circle mr-2"></i>
                            الملف الشخصي
                        </a>
                        <a href="/user-dashboard/bookings"
                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors duration-200">
                            <i class="fas fa-calendar-check mr-2"></i>
                            حجوزاتي
                        </a>
                        <a href="/user-dashboard/settings"
                            class="block px-4 py-2 text-sm text-gray-700 hover:bg-gray-100 transition-colors duration-200">
                            <i class="fas fa-cog mr-2"></i>
                            الإعدادات
                        </a>
                    </div>
                </li>
                {{/if}}
                <li class="relative">
                    <menu class="astronav-dropdown group" aria-expanded="false">
                        <button
                            class="flex items-center gap-1 w-full lg:w-auto lg:px-3 py-2 text-gray-600 hover:text-gray-900 transition-colors duration-200">
                            <span>اكتشف</span>
                            <svg xmlns="https://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24" stroke-width="3"
                                stroke="currentColor"
                                class="w-3 h-3 mt-0.5 group-open:rotate-180 transition-transform duration-200">
                                <path stroke-linecap="round" stroke-linejoin="round" d="M19.5 8.25l-7.5 7.5-7.5-7.5">
                                </path>
                            </svg>
                        </button>
                        <div class="astronav-dropdown dropdown-toggle hidden" aria-expanded="false">
                            <div class="lg:absolute w-full lg:w-48 z-10 lg:left-0 origin-top-left">
                                <div
                                    class="px-3 lg:py-2 lg:bg-white lg:rounded-md lg:shadow-lg lg:border flex flex-col">
                                    <a href="/comment_utiliser"
                                        class="py-1 text-gray-600 hover:text-gray-900 transition-colors duration-200">كيف
                                        يعمل؟</a>
                                    <a href="/services"
                                        class="py-1 text-gray-600 hover:text-gray-900 transition-colors duration-200">الخدمات</a>
                                    <a href="/contact-us"
                                        class="py-1 text-gray-600 hover:text-gray-900 transition-colors duration-200">اتصل بنا</a>
                                </div>
                            </div>
                        </div>
                    </menu>
                </li>
                <li>
                    <a href="/"
                        class="flex lg:px-3 py-2 items-center text-gray-600 hover:text-gray-900 transition-colors duration-200">
                        <span>الإصدار المميز</span>
                        <span
                            class="mr-1 px-2 py-0.5 text-[10px] animate-pulse font-semibold uppercase text-white bg-indigo-600 rounded-full">قريبا</span>
                    </a>
                </li>
            </ul>
        </nav>
        <!-- Mobile auth buttons -->
        <div class="lg:hidden flex items-center mt-3 gap-4">
            {{#if user}}
                <a href="/logout" 
                    class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 w-full px-4 py-2 bg-red-500 text-white hover:bg-red-600 border-2 border-transparent">
                    تسجيل الخروج
                </a>
            {{else}}
                <a href="/login"
                    class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 w-full px-4 py-2 bg-green-500 text-white hover:bg-green-600 border-2 border-transparent">
                    تسجيل الدخول
                </a>
                <a href="/signup"
                    class="rounded text-center transition focus-visible:ring-2 ring-offset-2 ring-gray-200 w-full px-4 py-2 bg-black text-white hover:bg-gray-800 border-2 border-transparent">
                    انشاء حساب
                </a>
            {{/if}}
        </div>

        <!-- Desktop auth buttons - Add this after the nav element -->
        <div class="hidden lg:flex items-center gap-4">
            {{#if user}}
                <a href="/logout" 
                    class="rounded-lg text-center font-medium px-5 py-2.5 transition-all duration-300 
                        bg-red-500 text-white border border-transparent shadow-sm 
                        hover:bg-red-600 focus-visible:ring-2 focus-visible:ring-red-400 ring-offset-2">
                    تسجيل الخروج
                </a>
            {{else}}
                <a href="/login" 
                    class="rounded-lg text-center font-medium px-5 py-2.5 transition-all duration-300 
                        bg-green-500 text-white border border-transparent shadow-sm 
                        hover:bg-green-600 focus-visible:ring-2 focus-visible:ring-green-400 ring-offset-2">
                    تسجيل الدخول
                </a>
                <a href="/signup" 
                    class="rounded-lg text-center font-medium px-5 py-2.5 transition-all duration-300 
                        bg-black text-white border border-transparent shadow-sm 
                        hover:bg-gray-800 focus-visible:ring-2 focus-visible:ring-gray-400 ring-offset-2">
                    انشاء حساب
                </a>
            {{/if}}
        </div>
        
       
           


    </header>
</div>
        <script>
            (function () {
                const closeOnClick = false;

                ["DOMContentLoaded", "astro:after-swap"].forEach((event) => {
                    document.addEventListener(event, addListeners);
                }
                );

                // Function to clone and replace elements
                function cloneAndReplace(element) {
                    const clone = element.cloneNode(true);
                    element.parentNode.replaceChild(clone, element);
                }

                function addListeners() {
                    // Clean up existing listeners
                    const oldMenuButton = document.getElementById("astronav-menu");
                    if (oldMenuButton) {
                        cloneAndReplace(oldMenuButton);
                    }

                    const oldDropdownMenus = document.querySelectorAll(".astronav-dropdown");
                    oldDropdownMenus.forEach((menu) => {
                        cloneAndReplace(menu);
                    }
                    );

                    // Mobile nav toggle
                    const menuButton = document.getElementById("astronav-menu");
                    menuButton && menuButton.addEventListener("click", toggleMobileNav);

                    // Dropdown menus
                    const dropdownMenus = document.querySelectorAll(".astronav-dropdown");
                    dropdownMenus.forEach((menu) => {
                        const button = menu.querySelector("button");
                        button && button.addEventListener("click", (event) => toggleDropdownMenu(event, menu, dropdownMenus));

                        // Handle Submenu Dropdowns
                        const dropDownSubmenus = menu.querySelectorAll(".astronav-dropdown-submenu");

                        dropDownSubmenus.forEach((submenu) => {
                            const submenuButton = submenu.querySelector("button");
                            submenuButton && submenuButton.addEventListener("click", (event) => {
                                event.stopImmediatePropagation();
                                toggleSubmenuDropdown(event, submenu);
                            }
                            );
                        }
                        );
                    }
                    );

                    // Clicking away from dropdown will remove the dropdown class
                    document.addEventListener("click", closeAllDropdowns);

                    if (closeOnClick) {
                        handleCloseOnClick();
                    }
                }

                function toggleMobileNav() {
                    [...document.querySelectorAll(".astronav-toggle")].forEach((el) => {
                        el.classList.toggle("hidden");
                    }
                    );
                }

                function toggleDropdownMenu(event, menu, dropdownMenus) {
                    toggleMenu(menu);

                    // Close one dropdown when selecting another
                    Array.from(dropdownMenus).filter((el) => el !== menu && !menu.contains(el)).forEach(closeMenu);

                    event.stopPropagation();
                }

                function toggleSubmenuDropdown(event, submenu) {
                    event.stopPropagation();
                    toggleMenu(submenu);

                    // Close sibling submenus at the same nesting level
                    const siblingSubmenus = submenu.closest(".astronav-dropdown").querySelectorAll(".astronav-dropdown-submenu");
                    Array.from(siblingSubmenus).filter((el) => el !== submenu && !submenu.contains(el)).forEach(closeMenu);
                }

                function closeAllDropdowns(event) {
                    const dropdownMenus = document.querySelectorAll(".dropdown-toggle");
                    const dropdownParent = document.querySelectorAll(".astronav-dropdown, .astronav-dropdown-submenu");
                    const isButtonInsideDropdown = [...document.querySelectorAll(".astronav-dropdown button, .astronav-dropdown-submenu button, #astronav-menu"),].some((button) => button.contains(event.target));
                    if (!isButtonInsideDropdown) {
                        dropdownMenus.forEach((d) => {
                            // console.log("I ran", d);
                            // if (!d.contains(event.target)) {
                            d.classList.remove("open");
                            d.removeAttribute("open");
                            d.classList.add("hidden");
                            // }
                        }
                        );
                        dropdownParent.forEach((d) => {
                            d.classList.remove("open");
                            d.removeAttribute("open");
                            d.setAttribute("aria-expanded", "false");
                        }
                        );
                    }
                }

                function toggleMenu(menu) {
                    menu.classList.toggle("open");
                    const expanded = menu.getAttribute("aria-expanded") === "true";
                    menu.setAttribute("aria-expanded", expanded ? "false" : "true");
                    menu.hasAttribute("open") ? menu.removeAttribute("open") : menu.setAttribute("open", "");

                    const dropdownToggle = menu.querySelector(".dropdown-toggle");
                    const dropdownExpanded = dropdownToggle.getAttribute("aria-expanded");
                    dropdownToggle.classList.toggle("hidden");
                    dropdownToggle.setAttribute("aria-expanded", dropdownExpanded === "true" ? "false" : "true");
                }

                function closeMenu(menu) {
                    // console.log("closing", menu);
                    menu.classList.remove("open");
                    menu.removeAttribute("open");
                    menu.setAttribute("aria-expanded", "false");
                    const dropdownToggles = menu.querySelectorAll(".dropdown-toggle");
                    dropdownToggles.forEach((toggle) => {
                        toggle.classList.add("hidden");
                        toggle.setAttribute("aria-expanded", "false");
                    }
                    );
                }




  {{!-- document.addEventListener("DOMContentLoaded", () => {
      e.preventDefault();
      const isLoggedIn = {{#if user}}true{{else}}false{{/if}};
      const authButtons = document.getElementById("auth-buttons");
      if (!isLoggedIn) {
          authButtons.style.display = "none";
      }
  }); --}}
                function handleCloseOnClick() {
                    const navMenuItems = document.querySelector(".astronav-items");
                    const navToggle = document.getElementById("astronav-menu");
                    const navLink = navMenuItems && navMenuItems.querySelectorAll("a");

                    const MenuIcons = navToggle.querySelectorAll(".astronav-toggle");

                    navLink && navLink.forEach((item) => {
                        item.addEventListener("click", () => {
                            navMenuItems?.classList.add("hidden");
                            MenuIcons.forEach((el) => {
                                el.classList.toggle("hidden");
                            }
                            );
                        }
                        );
                    }
                    );
                }
            }
            )();
        </script>