<!DOCTYPE html>
<html lang="ar" dir="rtl">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>الإعدادات - TN M3allim</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <script defer src="https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js"></script>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        @import url('https://fonts.googleapis.com/css2?family=Tajawal:wght@400;500;700&display=swap');
        body {
            font-family: 'Tajawal', sans-serif;
        }
        [x-cloak] { display: none !important; }
    </style>
</head>

<body class="bg-gray-50" x-data="settingsData()">
    {{> header }}

    <div class="container mx-auto px-4 py-8">
        <div class="max-w-4xl mx-auto">
            <!-- Header -->
            <div class="mb-8">
                <h1 class="text-3xl font-bold text-gray-900">الإعدادات</h1>
                <p class="mt-2 text-gray-600">إدارة إعدادات حسابك وتفضيلاتك</p>
            </div>

            <!-- Alert Message -->
            <template x-if="message">
                <div x-bind:class="{'bg-green-100 text-green-800': message.type === 'success', 'bg-red-100 text-red-800': message.type === 'error'}"
                     class="p-4 rounded-lg mb-6"
                     x-text="message.text">
                </div>
            </template>

            <!-- Password Change Section -->
            <div class="bg-white rounded-lg shadow p-6 mb-6">
                <h2 class="text-xl font-semibold text-gray-900 mb-4">تغيير كلمة المرور</h2>
                <form @submit.prevent="updatePassword" class="space-y-4">
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">كلمة المرور الحالية</label>
                        <input type="password" x-model="passwordForm.currentPassword" required
                               class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">كلمة المرور الجديدة</label>
                        <input type="password" x-model="passwordForm.newPassword" required
                               class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500">
                    </div>
                    <div>
                        <label class="block text-sm font-medium text-gray-700 mb-2">تأكيد كلمة المرور الجديدة</label>
                        <input type="password" x-model="passwordForm.confirmPassword" required
                               class="w-full px-4 py-2 border rounded-lg focus:ring-2 focus:ring-blue-500">
                    </div>
                    <div class="flex justify-end">
                        <button type="submit"
                                :disabled="loading"
                                class="bg-blue-500 text-white px-6 py-2 rounded-lg hover:bg-blue-600 focus:ring-2 focus:ring-blue-400 disabled:opacity-50">
                            <span x-show="!loading">تغيير كلمة المرور</span>
                            <span x-show="loading">جاري التحديث...</span>
                        </button>
                    </div>
                </form>
            </div>

           

            <!-- Account Deletion -->
            <div class="bg-white rounded-lg shadow p-6">
                <h2 class="text-xl font-semibold text-red-600 mb-4">حذف الحساب</h2>
                <p class="text-gray-600 mb-4">
                    تحذير: حذف حسابك سيؤدي إلى حذف جميع بياناتك بشكل نهائي. هذا الإجراء لا يمكن التراجع عنه.
                </p>
                <button @click="confirmDeleteAccount"
                        class="bg-red-500 text-white px-6 py-2 rounded-lg hover:bg-red-600 focus:ring-2 focus:ring-red-400">
                    حذف الحساب
                </button>
            </div>
        </div>
    </div>

    <script>
        function settingsData() {
            return {
                loading: false,
                message: null,
                notifications: {
                    email: false,
                    site: false
                },
                passwordForm: {
                    currentPassword: '',
                    newPassword: '',
                    confirmPassword: ''
                },

                async updatePassword() {
                    if (this.passwordForm.newPassword !== this.passwordForm.confirmPassword) {
                        this.message = {
                            type: 'error',
                            text: 'كلمة المرور الجديدة وتأكيدها غير متطابقين'
                        };
                        return;
                    }

                    if (this.passwordForm.newPassword.length < 6) {
                        this.message = {
                            type: 'error',
                            text: 'كلمة المرور الجديدة يجب أن تكون 6 أحرف على الأقل'
                        };
                        return;
                    }

                    this.loading = true;
                    this.message = null;

                    try {
                        const response = await fetch('/user-dashboard/update-password', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify({
                                currentPassword: this.passwordForm.currentPassword,
                                newPassword: this.passwordForm.newPassword
                            })
                        });

                        const result = await response.json();

                        if (response.ok) {
                            this.message = {
                                type: 'success',
                                text: result.message
                            };
                            // Clear form
                            this.passwordForm.currentPassword = '';
                            this.passwordForm.newPassword = '';
                            this.passwordForm.confirmPassword = '';
                        } else {
                            this.message = {
                                type: 'error',
                                text: result.error
                            };
                        }
                    } catch (error) {
                        console.error('Error updating password:', error);
                        this.message = {
                            type: 'error',
                            text: 'حدث خطأ في الاتصال بالخادم'
                        };
                    } finally {
                        this.loading = false;
                    }
                },

                async updateNotifications() {
                    this.loading = true;
                    try {
                        const response = await fetch('/user-dashboard/update-notifications', {
                            method: 'POST',
                            headers: {
                                'Content-Type': 'application/json'
                            },
                            body: JSON.stringify(this.notifications)
                        });

                        const result = await response.json();
                        
                        if (response.ok) {
                            this.message = {
                                type: 'success',
                                text: 'تم تحديث إعدادات الإشعارات بنجاح'
                            };
                        } else {
                            this.message = {
                                type: 'error',
                                text: result.error || 'حدث خطأ في تحديث الإعدادات'
                            };
                        }
                    } catch (error) {
                        console.error('Error updating notifications:', error);
                        this.message = {
                            type: 'error',
                            text: 'حدث خطأ في الاتصال بالخادم'
                        };
                    } finally {
                        this.loading = false;
                    }
                },

                confirmDeleteAccount() {
                    if (confirm('هل أنت متأكد من حذف حسابك؟ هذا الإجراء لا يمكن التراجع عنه.')) {
                        this.deleteAccount();
                    }
                },

                async deleteAccount() {
                    try {
                        const response = await fetch('/user-dashboard/delete-account', {
                            method: 'POST'
                        });

                        if (response.ok) {
                            window.location.href = '/logout';
                        } else {
                            this.message = {
                                type: 'error',
                                text: 'حدث خطأ في حذف الحساب'
                            };
                        }
                    } catch (error) {
                        console.error('Error deleting account:', error);
                        this.message = {
                            type: 'error',
                            text: 'حدث خطأ في الاتصال بالخادم'
                        };
                    }
                }
            }
        }
    </script>
</body>
</html>
